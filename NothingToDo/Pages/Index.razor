@page "/"
@using Model
<div class="row justify-content-center">
    <div class="col-8">
        <EditForm Model="todo" OnValidSubmit="handleValidSubmit">
            <div class="input-group">
                <label for="task" class="sr-only">Task</label>
                <InputText @bind-Value="todo.Task" class="form-control" id="task" placeholder="Your Task Here..." />
                <div class="input-group-append">
                    <button type="submit" class="btn btn-primary mb-2" disabled="@(string.IsNullOrEmpty(todo.Task))">Add</button>
                </div>
            </div>
        </EditForm>
    </div>
</div>
<div class="row justify-content-center">
    @if (todos.Count > 0)
    {
        <table class="table table-striped table-hover col-sm-8">
            <thead>
                <tr>
                    <th>Task</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var todo in todos)
                {
                    <tr class="@(todo.IsDone ? "table-success" : "")">
                        <td>@todo.Task</td>
                        <td><input type="checkbox" @bind="todo.IsDone" class="form-check-input" /> Mark as Done</td>
                        <td><button @onclick="(() => delete(todo))" @onclick:preventDefault class="btn btn-sm btn-danger">Delete</button></td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else 
    { 
        <p class="alert alert-info col-sm-6">No Tasks Yet</p>
    }

</div>
@code {
    private Todo todo = new();

    private List<Todo> todos = new();

    private void handleValidSubmit()
    {
        if (string.IsNullOrEmpty(todo.Task)) return;
        
        todos.Add(todo);
        todo = new();
    }
    private void delete(Todo todo)
    {
        todos.Remove(todo);
    }
}

